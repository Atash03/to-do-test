{"version":3,"file":"static/js/529.912c1e3c.chunk.js","mappings":"+RAqQA,UA9OwB,WACtB,IACQA,GADSC,EAAAA,EAAAA,MACTD,MACRE,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAsCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwCjB,EAAAA,EAAAA,UAAgC,MAAKkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAtEE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0BrB,EAAAA,EAAAA,UAAc,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAApCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCzB,EAAAA,EAAAA,UAAqB,IAAG0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAjDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8B7B,EAAAA,EAAAA,WAAS,GAAM8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,IAE1BG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACDC,EAAAA,EAAAA,IAASjD,EAAMkD,IAAI,KAAD,EAA9BP,EAAGG,EAAAK,KACTxB,EAASgB,EAAIS,MACPR,EAAMlB,EAAM2B,KAAI,SAACC,GAAS,MAAM,CACpCC,UAAWD,EAAKC,UAChBC,KAAMF,EAAKE,KACXC,IAAKH,EAAKI,KACX,IACD3B,EAAYa,GACRD,EAAIS,KAAKO,OAAS,GACpBxB,GAAW,GACZ,wBAAAW,EAAAc,OAAA,GAAAlB,EAAA,KACF,kBAZiB,OAAAJ,EAAAuB,MAAA,KAAAC,UAAA,KAclBzB,GACF,GAAG,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACHN,EAAS6B,QACZxB,GAAW,EAEf,GAAG,CAACL,EAAS6B,SAGb,IAAMI,EAAU,eAAAC,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwB,IAAA,IAAAtB,EAAAS,EAAA,OAAAZ,EAAAA,EAAAA,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,GAEGmB,EAAAA,EAAAA,IAAS7D,EAAUN,EAAMkD,IAAI,KAAD,EAAxCP,EAAGuB,EAAAf,KACHC,EAAOT,EAAIS,KACjBzB,EAAS,GAADyC,QAAAC,EAAAA,EAAAA,GAAK3C,GAAK,CAAE0B,KACpBzC,GAAc,GACdwB,GAAW,GACX5B,EAAY,IAAI2D,EAAAlB,KAAA,iBAAAkB,EAAAnB,KAAA,GAAAmB,EAAAI,GAAAJ,EAAA,SAEhBK,QAAQC,IAAGN,EAAAI,IAAM,yBAAAJ,EAAAN,OAAA,GAAAK,EAAA,mBAEpB,kBAXe,OAAAD,EAAAH,MAAA,KAAAC,UAAA,MAahB1B,EAAAA,EAAAA,YAAU,WACRL,EACEL,EAAM2B,KAAI,SAACC,GAAS,MAAM,CACxBC,UAAWD,EAAKC,UAChBC,KAAMF,EAAKE,KACXC,IAAKH,EAAKI,KACX,IAEL,GAAG,CAAChC,IAEJ,IAAM+C,EAAY,eAAAC,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkC,IAAA,IAAAC,EAAA,OAAApC,EAAAA,EAAAA,KAAAK,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,GAEX8B,EAAAA,EAAAA,IAAuB,OAAZxD,QAAY,IAAZA,OAAY,EAAZA,EAAcmC,KAAK,KAAD,EAC7BmB,EAAU9C,EAASiD,QAAO,SAACzB,GAAI,OAAKA,EAAKG,OAAoB,OAAZnC,QAAY,IAAZA,OAAY,EAAZA,EAAcmC,IAAK,IAC1E1B,EAAY6C,GACZrD,EAAgB,MAChBR,GAAe,GAAO8D,EAAA7B,KAAA,gBAAA6B,EAAA9B,KAAA,EAAA8B,EAAAP,GAAAO,EAAA,SAEtBN,QAAQC,IAAI,OAAO,yBAAAK,EAAAjB,OAAA,GAAAe,EAAA,kBAEtB,kBAViB,OAAAD,EAAAb,MAAA,KAAAC,UAAA,KAYZkB,EAAU,eAAAC,GAAA1C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyC,IAAA,IAAAC,EAAA,OAAA3C,EAAAA,EAAAA,KAAAK,MAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,UAAAoC,EAAArC,KAAA,EAEC,OAAZzB,QAAY,IAAZA,IAAAA,EAAcmC,IAAG,CAAA2B,EAAApC,KAAA,QAKhB,OAJHzB,GAAgB,SAAC8D,GACf,IAAMC,EAAID,EAEV,OADAC,EAAE9B,KAAOlD,EACFgF,CACT,IAAGF,EAAApC,KAAA,GACGuC,EAAAA,EAAAA,IACQ,OAAZjE,QAAY,IAAZA,OAAY,EAAZA,EAAcmC,IACF,OAAZnC,QAAY,IAAZA,OAAY,EAAZA,EAAckC,KACF,OAAZlC,QAAY,IAAZA,OAAY,EAAZA,EAAciC,UACdvD,EAAMkD,IACN,KAAD,EACKiC,EAAQrD,EAAS0D,WACrB,SAACC,GAAI,OAAKA,EAAKhC,MAAQnC,EAAamC,GAAG,IAEzC1B,GAAY,SAAC2D,GACX,IAAMJ,EAAII,EAIV,OAHAJ,EAAEH,GAAO3B,KAAOlC,EAAakC,KAC7B8B,EAAEH,GAAO1B,IAAMnC,EAAamC,IAC5B6B,EAAEH,GAAO5B,UAAYjC,EAAaiC,UAC3B+B,CACT,IACAnE,GAAY,GACZZ,EAAY,IAAI,OAAA6E,EAAApC,KAAA,iBAAAoC,EAAArC,KAAA,GAAAqC,EAAAd,GAAAc,EAAA,SAGlBb,QAAQC,IAAI,OAAO,yBAAAY,EAAAxB,OAAA,GAAAsB,EAAA,mBAEtB,kBA9Be,OAAAD,EAAApB,MAAA,KAAAC,UAAA,KAwDV6B,EAAiB,CACrB,CACEC,UAAW,WACXC,OAAQ,SAACC,EAAQC,GAAW,OAC1BjE,EAAS6B,OAAS,GAChBqC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,IACP,IAAI,GAEZ,CACEC,MAAO,OACPN,UAAW,OACX1E,UAAU,GAEZ,CACE0E,UAAW,SACXC,OAAQ,SAACC,EAAQC,GAAW,OAC1BjE,EAAS6B,QAAU,GACjBqC,EAAAA,EAAAA,KAAA,OACEG,UAAU,iBACVC,QAAS,kBA3CMX,EA2CgBM,GA1C9BtC,KACPlC,EAAgBkE,QAElB1E,GAAe,GAJO,IAAC0E,CA2CuB,EAACY,UAEvCL,EAAAA,EAAAA,KAACM,EAAAA,EAAc,MAEf,IAAI,GAEZ,CACEV,UAAW,OACXC,OAAQ,SAACC,EAAQC,GAAW,OAC1BjE,EAAS6B,OAAS,GAChBqC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAiBC,QAAS,kBA9C1BX,EA8C8CM,GA7C1DtC,KACPlC,EAAgBkE,QAElBtE,GAAY,GAJQ,IAACsE,CA8CqD,EAACY,UACnEL,EAAAA,EAAAA,KAACO,EAAAA,EAAY,MAEb,IAAI,IAId,OACEP,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uGAAsGE,UACnHG,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4CAA2CE,SAAA,EACxDG,EAAAA,EAAAA,MAAA,OAAKL,UAAU,+CAA8CE,SAAA,EAC3DG,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oEAAmEE,SAAA,EAChFG,EAAAA,EAAAA,MAAA,MAAIL,UAAU,kCAAiCE,SAAA,CAAC,YACtCL,EAAAA,EAAAA,KAAA,QAAAK,SAAM,aACdL,EAAAA,EAAAA,KAAA,QAAMG,UAAU,aAAYE,SAAErG,EAAMkG,YAEtCF,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAG,kBAAiBL,UACxBG,EAAAA,EAAAA,MAAA,UAAQL,UAAU,0FAAyFE,SAAA,EACzGL,EAAAA,EAAAA,KAACW,EAAAA,EAAiB,IAAG,iBAI3BX,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6CAA4CE,SACxDnE,IACC8D,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CACJT,UAAU,SACVU,aAAc,iBAAM,cAAc,EAClCC,WAAYhF,EACZiF,QAASpB,EACTqB,YAAY,OAIlBhB,EAAAA,EAAAA,KAAA,UACEG,UAAU,wIACVC,QAAS,kBAAMzF,GAAc,EAAK,EAAC0F,UAEnCL,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,UAGjBjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJhB,MAAM,WACNiB,UAAQ,EACRC,KAAM1G,EACN2G,KAAMtD,EACNuD,SAAU,kBAAM3G,GAAc,EAAM,EAAC0F,UAErCL,EAAAA,EAAAA,KAACuB,EAAAA,EAAMC,SAAQ,CACbC,KAAM,EACNC,YAAY,iBACZC,MAAOrH,EACPsH,SAAU,SAACC,GAAM,OAAKtH,EAAYsH,EAAEC,OAAOH,MAAM,OAGrD3B,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJhB,MAAM,kBACNiB,UAAQ,EACRY,MAAO,IACPX,KAAMtG,EACNuG,KAAM5C,EACN6C,SAAU,kBAAMvG,GAAe,EAAM,KAEvCiF,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJhB,MAAM,YACNiB,UAAQ,EACRC,KAAMlG,EACNmG,KAAMrC,EACNsC,SAAU,kBAAMnG,GAAY,EAAM,EAACkF,UAEnCL,EAAAA,EAAAA,KAACuB,EAAAA,EAAMC,SAAQ,CACbC,KAAM,EACNC,YAAY,iBACZC,MAAOrH,EACPsH,SAAU,SAACC,GAAM,OAAKtH,EAAYsH,EAAEC,OAAOH,MAAM,UAM7D,C","sources":["pages/TastListDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Checkbox, Input, Modal, Table } from \"antd\";\r\nimport {\r\n  ArrowLeftOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { deleteTask, getTasks, postTask, putTask } from \"../utils/apiRequests\";\r\n\r\n// here goes Table things\r\n\r\ntype EditableTableProps = Parameters<typeof Table>[0];\r\n\r\ninterface DataType {\r\n  key: string;\r\n  text: string;\r\n  completed: any;\r\n}\r\n\r\ntype ColumnTypes = Exclude<EditableTableProps[\"columns\"], undefined>;\r\n\r\nconst TastListDetails = () => {\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [openModal1, setOpenModal1] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [editable, setEditable] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState<DataType | null | any>(null);\r\n  const [tasks, setTasks] = useState<any>([]);\r\n  const [allTasks, setAllTasks] = useState<DataType[]>([]);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getListTasks = async () => {\r\n      const res = await getTasks(state.id);\r\n      setTasks(res.data);\r\n      const all = tasks.map((task: any) => ({\r\n        completed: task.completed,\r\n        text: task.text,\r\n        key: task.uuid,\r\n      }));\r\n      setAllTasks(all);\r\n      if (res.data.length > 0) {\r\n        setVisible(true);\r\n      }\r\n    };\r\n\r\n    getListTasks();\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    if (!allTasks.length) {\r\n      setVisible(false);\r\n    }\r\n  }, [allTasks.length]);\r\n\r\n  // api request\r\n  const createTask = async () => {\r\n    try {\r\n      const res = await postTask(taskName, state.id);\r\n      const data = res.data;\r\n      setTasks([...tasks, data]);\r\n      setOpenModal1(false);\r\n      setVisible(true);\r\n      setTaskName(\"\");\r\n    } catch (err: any) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAllTasks(\r\n      tasks.map((task: any) => ({\r\n        completed: task.completed,\r\n        text: task.text,\r\n        key: task.uuid,\r\n      }))\r\n    );\r\n  }, [tasks]);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteTask(selectedItem?.key);\r\n      const newData = allTasks.filter((task) => task.key !== selectedItem?.key);\r\n      setAllTasks(newData);\r\n      setSelectedItem(null);\r\n      setDeleteModal(false);\r\n    } catch (err: any) {\r\n      console.log(\"err\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    try {\r\n      if (selectedItem?.key) {\r\n        setSelectedItem((prevState: any) => {\r\n          const a = prevState;\r\n          a.text = taskName;\r\n          return a;\r\n        });\r\n        await putTask(\r\n          selectedItem?.key,\r\n          selectedItem?.text,\r\n          selectedItem?.completed,\r\n          state.id\r\n        );\r\n        const index = allTasks.findIndex(\r\n          (item) => item.key === selectedItem.key\r\n        );\r\n        setAllTasks((previousState) => {\r\n          const a = previousState;\r\n          a[index].text = selectedItem.text;\r\n          a[index].key = selectedItem.key;\r\n          a[index].completed = selectedItem.completed;\r\n          return a;\r\n        });\r\n        setEditable(false);\r\n        setTaskName(\"\");\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err\");\r\n    }\r\n  };\r\n\r\n  const showDeleteModal = (item: any) => {\r\n    if (item.key) {\r\n      setSelectedItem(item);\r\n    }\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  const showEditModal = (item: any) => {\r\n    if (item.key) {\r\n      setSelectedItem(item);\r\n    }\r\n    setEditable(true);\r\n  };\r\n\r\n  const handleCheck = async (record: any) => {\r\n      await putTask(record?.key, record?.text, !record.completed, state.id);\r\n      setAllTasks((previousState) => {\r\n        let a = previousState;\r\n        const index = allTasks.findIndex((item) => item.key === record.key);\r\n        a[index].completed = !record.completed;\r\n        return a;\r\n      });\r\n  };\r\n\r\n  const defaultColumns = [\r\n    {\r\n      dataIndex: \"checkbox\",\r\n      render: (_: any, record: any) =>\r\n        allTasks.length > 0 ? (\r\n          <Checkbox />\r\n        ) : null,\r\n    },\r\n    {\r\n      title: \"Task\",\r\n      dataIndex: \"text\",\r\n      editable: true,\r\n    },\r\n    {\r\n      dataIndex: \"delete\",\r\n      render: (_: any, record: any) =>\r\n        allTasks.length >= 1 ? (\r\n          <div\r\n            className=\"cursor-pointer\"\r\n            onClick={() => showDeleteModal(record)}\r\n          >\r\n            <DeleteOutlined />\r\n          </div>\r\n        ) : null,\r\n    },\r\n    {\r\n      dataIndex: \"edit\",\r\n      render: (_: any, record: any) =>\r\n        allTasks.length > 0 ? (\r\n          <div className=\"cursor-pointer\" onClick={() => showEditModal(record)}>\r\n            <EditOutlined />\r\n          </div>\r\n        ) : null,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-blue1 w-full flex flex-col items-center text-white py-4 px-4 md:px-8 lg:px-12 min-h-screen h-full\">\r\n      <div className=\"max-w-[1440px] w-full flex justify-center\">\r\n        <div className=\"text-white flex flex-col items-center w-full\">\r\n          <div className=\"border-b border-white pb-4 w-full flex item-center justify-around\">\r\n            <h1 className=\"text-center text-3xl font-serif\">\r\n              Doingly <span>&#x2637; </span>\r\n              <span className=\"capitalize\">{state.title}</span>\r\n            </h1>\r\n            <Link to=\"/protectedRoute\">\r\n              <button className=\"border border-white py-2 px-4 rounded-xl hover:bg-blue2 hover:border-blue2 duration-300\">\r\n                <ArrowLeftOutlined /> Back\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"mt-6 max-w-[400px] md:max-w-[700px] w-full\">\r\n            {visible && (\r\n              <Table\r\n                className=\"w-full\"\r\n                rowClassName={() => \"editable-row\"}\r\n                dataSource={allTasks}\r\n                columns={defaultColumns as ColumnTypes}\r\n                pagination={false}\r\n              />\r\n            )}\r\n          </div>\r\n          <button\r\n            className=\"bg-blue2 rounded-2xl px-3 py-2 mt-4 hover:bg-blue3 duration-300 focus:outline-none w-[50px] h-[50px] flex justify-center items-center\"\r\n            onClick={() => setOpenModal1(true)}\r\n          >\r\n            <PlusOutlined />\r\n          </button>\r\n        </div>\r\n        <Modal\r\n          title=\"Add task\"\r\n          centered\r\n          open={openModal1}\r\n          onOk={createTask}\r\n          onCancel={() => setOpenModal1(false)}\r\n        >\r\n          <Input.TextArea\r\n            rows={3}\r\n            placeholder=\"task name here\"\r\n            value={taskName}\r\n            onChange={(e: any) => setTaskName(e.target.value)}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"Sure to delete?\"\r\n          centered\r\n          width={300}\r\n          open={deleteModal}\r\n          onOk={handleDelete}\r\n          onCancel={() => setDeleteModal(false)}\r\n        />\r\n        <Modal\r\n          title=\"Edit task\"\r\n          centered\r\n          open={editable}\r\n          onOk={handleEdit}\r\n          onCancel={() => setEditable(false)}\r\n        >\r\n          <Input.TextArea\r\n            rows={3}\r\n            placeholder=\"task name here\"\r\n            value={taskName}\r\n            onChange={(e: any) => setTaskName(e.target.value)}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TastListDetails;\r\n"],"names":["state","useLocation","_useState","useState","_useState2","_slicedToArray","taskName","setTaskName","_useState3","_useState4","openModal1","setOpenModal1","_useState5","_useState6","deleteModal","setDeleteModal","_useState7","_useState8","editable","setEditable","_useState9","_useState10","selectedItem","setSelectedItem","_useState11","_useState12","tasks","setTasks","_useState13","_useState14","allTasks","setAllTasks","_useState15","_useState16","visible","setVisible","useEffect","getListTasks","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","all","wrap","_context","prev","next","getTasks","id","sent","data","map","task","completed","text","key","uuid","length","stop","apply","arguments","createTask","_ref2","_callee2","_context2","postTask","concat","_toConsumableArray","t0","console","log","handleDelete","_ref3","_callee3","newData","_context3","deleteTask","filter","handleEdit","_ref4","_callee4","index","_context4","prevState","a","putTask","findIndex","item","previousState","defaultColumns","dataIndex","render","_","record","_jsx","Checkbox","title","className","onClick","children","DeleteOutlined","EditOutlined","_jsxs","Link","to","ArrowLeftOutlined","Table","rowClassName","dataSource","columns","pagination","PlusOutlined","Modal","centered","open","onOk","onCancel","Input","TextArea","rows","placeholder","value","onChange","e","target","width"],"sourceRoot":""}